{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/la/adflow_landing_page/src/components/auth/OtpForm.tsx"],"sourcesContent":["\"use client\"; \n\nimport { useState, useEffect, FormEvent } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport Swal from \"sweetalert2\";\n\nexport default function OtpForm() {\n  const [otp, setOtp] = useState(new Array(6).fill(\"\"));\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [counter, setCounter] = useState(30);\n  const router = useRouter();\n\n  useEffect(() => {\n    let timer: any;\n    if (counter > 0) {\n      timer = setTimeout(() => setCounter(counter - 1), 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [counter]);\n\n  const handleChange = (element: any, index: any) => {\n    if (isNaN(element.value)) return false;\n    setOtp([...otp.map((d, idx) => (idx === index ? element.value : d))]);\n    if (element.nextSibling) {\n      element.nextSibling.focus();\n    }\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    const enteredOtp = otp.join(\"\");\n\n    try {\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        \"api-key\": process.env.NEXT_PUBLIC_API_KEY || \"\",\n      };\n\n      const response = await fetch(\"/api/auth/verify-otp\", {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify({ otp: enteredOtp }),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        Swal.fire(\"Failed to verify\", error.message, \"error\");\n      } else {\n        const data = await response.json();\n        Swal.fire(\n          \"OTP Verified!\",\n          \"You will be redirected shortly.\",\n          \"success\"\n        ).then(() => {\n          const roleTitle = data.user?.role?.title;\n\n          if (roleTitle === \"Media House\") {\n            router.push(\"http://209.38.120.126:5174\");\n          } else if (roleTitle === \"Advertiser\") {\n            router.push(\"http://209.38.120.126:5173\");\n          } else {\n            router.push(\"/\");\n          }\n        });\n        \n      }\n    } catch (error: any) {\n      Swal.fire({\n        title: \"Failed to retrieve otp\",\n        text: error.message || \"An unknown error occurred\",\n        icon: \"error\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <form className=\"w-full max-w-sm space-y-6\" onSubmit={handleSubmit}>\n      <div className=\"flex justify-between space-x-3\">\n        {otp.map((data, index) => (\n          <input\n            key={index}\n            type=\"text\"\n            maxLength={1}\n            className=\"w-12 h-10 px-4 text-center form-control border border-gray-300 bg-white rounded-lg \"\n            value={data}\n            onChange={(e) => handleChange(e.target, index)}\n          />\n        ))}\n      </div>\n      <div className=\"text-center\">\n        {counter > 0 ? (\n          <span className=\"text-sm flex justify-end\">Resend in {counter} seconds</span>\n        ) : (\n          <Link href=\"#\" onClick={() => setCounter(30)}>\n            <p className=\"text-sm flex text-red-500 justify-end underline\">Request again</p>\n          </Link>\n        )}\n      </div>\n      <button\n        type=\"submit\"\n        className=\"w-full py-1 text-sm bg-[#FDDCDF] border-[#FDDCDF] border text-[#F20519] rounded-lg shadow-md hover:bg-[#F20519] hover:text-white\"\n        disabled={isSubmitting}\n      >\n        Submit\n      </button>\n    </form>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC;IACjD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;QACJ,IAAI,UAAU,GAAG;YACf,QAAQ,WAAW,IAAM,WAAW,UAAU,IAAI;QACpD;QACA,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;KAAQ;IAEZ,MAAM,eAAe,CAAC,SAAc;QAClC,IAAI,MAAM,QAAQ,KAAK,GAAG,OAAO;QACjC,OAAO;eAAI,IAAI,GAAG,CAAC,CAAC,GAAG,MAAS,QAAQ,QAAQ,QAAQ,KAAK,GAAG;SAAI;QACpE,IAAI,QAAQ,WAAW,EAAE;YACvB,QAAQ,WAAW,CAAC,KAAK;QAC3B;IACF;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,gBAAgB;QAChB,MAAM,aAAa,IAAI,IAAI,CAAC;QAE5B,IAAI;YACF,MAAM,UAAU;gBACd,gBAAgB;gBAChB,WAAW,wGAAmC;YAChD;YAEA,MAAM,WAAW,MAAM,MAAM,wBAAwB;gBACnD,QAAQ;gBACR;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE,KAAK;gBAAW;YACzC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;gBACjC,gKAAA,CAAA,UAAI,CAAC,IAAI,CAAC,oBAAoB,MAAM,OAAO,EAAE;YAC/C,OAAO;gBACL,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,gKAAA,CAAA,UAAI,CAAC,IAAI,CACP,iBACA,mCACA,WACA,IAAI,CAAC;oBACL,MAAM,YAAY,KAAK,IAAI,EAAE,MAAM;oBAEnC,IAAI,cAAc,eAAe;wBAC/B,OAAO,IAAI,CAAC;oBACd,OAAO,IAAI,cAAc,cAAc;wBACrC,OAAO,IAAI,CAAC;oBACd,OAAO;wBACL,OAAO,IAAI,CAAC;oBACd;gBACF;YAEF;QACF,EAAE,OAAO,OAAY;YACnB,gKAAA,CAAA,UAAI,CAAC,IAAI,CAAC;gBACR,OAAO;gBACP,MAAM,MAAM,OAAO,IAAI;gBACvB,MAAM;YACR;QACF,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,qBACE,8OAAC;QAAK,WAAU;QAA4B,UAAU;;0BACpD,8OAAC;gBAAI,WAAU;0BACZ,IAAI,GAAG,CAAC,CAAC,MAAM,sBACd,8OAAC;wBAEC,MAAK;wBACL,WAAW;wBACX,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,EAAE;uBALnC;;;;;;;;;;0BASX,8OAAC;gBAAI,WAAU;0BACZ,UAAU,kBACT,8OAAC;oBAAK,WAAU;;wBAA2B;wBAAW;wBAAQ;;;;;;yCAE9D,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,SAAS,IAAM,WAAW;8BACvC,cAAA,8OAAC;wBAAE,WAAU;kCAAkD;;;;;;;;;;;;;;;;0BAIrE,8OAAC;gBACC,MAAK;gBACL,WAAU;gBACV,UAAU;0BACX;;;;;;;;;;;;AAKP"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}