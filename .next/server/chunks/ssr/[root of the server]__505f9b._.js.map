{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/la/adflow_landing_page/src/components/auth/RegisterForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, ChangeEvent, FormEvent } from \"react\";\nimport Link from \"next/link\";\nimport Swal from \"sweetalert2\";\nimport { useRouter } from \"next/navigation\";\n\ninterface AccountType {\n  id: string;\n  title: string;\n}\n\nexport default function RegisterForm() {\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\",\n    accountType: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const router = useRouter();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [accountTypes, setAccountTypes] = useState<AccountType[]>([]);\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { id, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [id]: value,\n    }));\n  };\n\n  const handleSelectChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    const fetchAccountTypes = async () => {\n      try {\n        const headers: HeadersInit = {\n          \"Content-Type\": \"application/json\",\n        };\n\n        const apiKey = process.env.NEXT_PUBLIC_API_KEY;\n        if (apiKey) {\n          headers[\"api-key\"] = apiKey;\n        }\n\n        const response = await fetch(\"/api/account-types\", {\n          method: \"GET\",\n          headers,\n        });\n        const data = await response.json();\n        setAccountTypes(data);\n      } catch (error) {\n        console.error(\"Failed to fetch account types\", error);\n      }\n    };\n\n    fetchAccountTypes();\n  }, []);\n\n  useEffect(() => {\n    const registerUser = async () => {\n      if (!isSubmitting) return;\n\n      try {\n        const headers: HeadersInit = {\n          \"Content-Type\": \"application/json\",\n        };\n\n        const apiKey = process.env.NEXT_PUBLIC_API_KEY;\n        if (apiKey) {\n          headers[\"api-key\"] = apiKey;\n        }\n\n        const response = await fetch(\"/api/auth/signup\", {\n          method: \"POST\",\n          headers,\n          body: JSON.stringify({\n            username: formData.fullName,\n            email: formData.email,\n            account_type: formData.accountType,\n            password: formData.password,\n          }),\n        });\n\n        if (!response.ok) {\n          const message = await response.text();\n          Swal.fire(\"Failed to register\", message, \"error\");\n        } else {\n          Swal.fire(\n            \"Registration successful!\",\n            \"You will be redirected to the login page.\",\n            \"success\"\n          ).then(() => {\n            router.push(\"/auth/login\");\n          });\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          Swal.fire(\"Failed to retrieve otp\", error.message, \"error\");\n        } else {\n          Swal.fire(\n            \"Failed to retrieve otp\",\n            \"An unknown error occurred\",\n            \"error\"\n          );\n        }\n      } finally {\n        setIsSubmitting(false);\n      }\n    };\n\n    registerUser();\n  }, [isSubmitting]);\n\n  return (\n    <form className=\"w-full max-w-sm space-y-6\" onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"fullName\" className=\"block text-black text-sm\">\n          Full Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"fullName\"\n          id=\"fullName\"\n          className=\"w-full mt-1 px-4 py-2 border text-black border-gray-300 bg-white rounded-lg shadow-sm\"\n          placeholder=\"Your full name\"\n          value={formData.fullName}\n          onChange={handleInputChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"email\" className=\"block text-black text-sm\">\n          Email\n        </label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          className=\"w-full mt-1 px-4 py-2 border text-black border-gray-300 bg-white rounded-lg shadow-sm\"\n          placeholder=\"admin@admin.com\"\n          value={formData.email}\n          onChange={handleInputChange}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"accountType\" className=\"block text-black text-sm\">\n          Account Type\n        </label>\n        <select\n          name=\"accountType\"\n          value={formData.accountType}\n          className=\"w-full mt-1 px-4 py-2 border text-black border-gray-300 bg-white\n          rounded-lg shadow-sm\"\n          onChange={handleSelectChange}\n        >\n          <option value=\"\">Select Account Type</option>\n          {accountTypes.map((type) => (\n            <option key={type.id} value={type.id}>\n              {type.title}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"password\" className=\"block text-black text-sm\">\n          Password\n        </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          className=\"w-full mt-1 px-4 py-2 border text-black border-gray-300 bg-white rounded-lg shadow-sm focus:ring-2 focus:ring-green-500 focus:outline-none\"\n          value={formData.password}\n          onChange={handleInputChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"confirmPassword\" className=\"block text-black text-sm\">\n          Confirm Password\n        </label>\n        <input\n          type=\"password\"\n          name=\"confirmPassword\"\n          id=\"confirmPassword\"\n          className=\"w-full mt-1 px-4 py-2 border text-black border-gray-300 bg-white rounded-lg shadow-sm focus:ring-2 focus:ring-green-500 focus:outline-none\"\n          value={formData.confirmPassword}\n          onChange={handleInputChange}\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"w-full py-1 text-sm bg-[#FDDCDF] border-[#FDDCDF] border text-[#F20519] rounded-lg shadow-md hover:bg-[#F20519] hover:text-white\"\n      >\n        Sign Up\n      </button>\n      <p className=\"text-center text-sm text-black\">\n        Already have an account?{\" \"}\n        <Link href=\"/auth/login\">\n          <span className=\"text-red-500 hover:underline\">Log In</span>\n        </Link>\n      </p>\n      <div className=\"flex items-center space-x-2\">\n        <hr className=\"flex-grow border-gray-300\" />\n        <span className=\"text-sm text-gray-500\">OR</span>\n        <hr className=\"flex-grow border-gray-300\" />\n      </div>\n      <div className=\"space-y-4 text-black\">\n        <button\n          type=\"button\"\n          className=\"flex items-center justify-center w-full py-2 text-sm border border-gray-300 rounded-full shadow-sm text-black\"\n        >\n          <img\n            src=\"/images/google-icon.png\"\n            alt=\"Google Logo\"\n            className=\"w-5 h-5 mr-2 object-cover\"\n          />\n          Continue with Google\n        </button>\n      </div>\n    </form>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAYe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,UAAU;QACV,OAAO;QACP,aAAa;QACb,UAAU;QACV,iBAAiB;IACnB;IAEA,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAElE,MAAM,oBAAoB,CAAC;QACzB,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAC9B,YAAY,CAAC,WAAa,CAAC;gBACzB,GAAG,QAAQ;gBACX,CAAC,GAAG,EAAE;YACR,CAAC;IACH;IAEA,MAAM,qBAAqB,CAAC;QAC1B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAC,WAAa,CAAC;gBACzB,GAAG,QAAQ;gBACX,CAAC,KAAK,EAAE;YACV,CAAC;IACH;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,SAAS,QAAQ,KAAK,SAAS,eAAe,EAAE;YAClD,MAAM;YACN;QACF;QACA,gBAAgB;IAClB;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,oBAAoB;YACxB,IAAI;gBACF,MAAM,UAAuB;oBAC3B,gBAAgB;gBAClB;gBAEA,MAAM;gBACN,wCAAY;oBACV,OAAO,CAAC,UAAU,GAAG;gBACvB;gBAEA,MAAM,WAAW,MAAM,MAAM,sBAAsB;oBACjD,QAAQ;oBACR;gBACF;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,gBAAgB;YAClB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,iCAAiC;YACjD;QACF;QAEA;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,IAAI,CAAC,cAAc;YAEnB,IAAI;gBACF,MAAM,UAAuB;oBAC3B,gBAAgB;gBAClB;gBAEA,MAAM;gBACN,wCAAY;oBACV,OAAO,CAAC,UAAU,GAAG;gBACvB;gBAEA,MAAM,WAAW,MAAM,MAAM,oBAAoB;oBAC/C,QAAQ;oBACR;oBACA,MAAM,KAAK,SAAS,CAAC;wBACnB,UAAU,SAAS,QAAQ;wBAC3B,OAAO,SAAS,KAAK;wBACrB,cAAc,SAAS,WAAW;wBAClC,UAAU,SAAS,QAAQ;oBAC7B;gBACF;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,UAAU,MAAM,SAAS,IAAI;oBACnC,gKAAA,CAAA,UAAI,CAAC,IAAI,CAAC,sBAAsB,SAAS;gBAC3C,OAAO;oBACL,gKAAA,CAAA,UAAI,CAAC,IAAI,CACP,4BACA,6CACA,WACA,IAAI,CAAC;wBACL,OAAO,IAAI,CAAC;oBACd;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,IAAI,iBAAiB,OAAO;oBAC1B,gKAAA,CAAA,UAAI,CAAC,IAAI,CAAC,0BAA0B,MAAM,OAAO,EAAE;gBACrD,OAAO;oBACL,gKAAA,CAAA,UAAI,CAAC,IAAI,CACP,0BACA,6BACA;gBAEJ;YACF,SAAU;gBACR,gBAAgB;YAClB;QACF;QAEA;IACF,GAAG;QAAC;KAAa;IAEjB,qBACE,8OAAC;QAAK,WAAU;QAA4B,UAAU;;0BACpD,8OAAC;;kCACC,8OAAC;wBAAM,SAAQ;wBAAW,WAAU;kCAA2B;;;;;;kCAG/D,8OAAC;wBACC,MAAK;wBACL,MAAK;wBACL,IAAG;wBACH,WAAU;wBACV,aAAY;wBACZ,OAAO,SAAS,QAAQ;wBACxB,UAAU;;;;;;;;;;;;0BAGd,8OAAC;;kCACC,8OAAC;wBAAM,SAAQ;wBAAQ,WAAU;kCAA2B;;;;;;kCAG5D,8OAAC;wBACC,MAAK;wBACL,MAAK;wBACL,IAAG;wBACH,WAAU;wBACV,aAAY;wBACZ,OAAO,SAAS,KAAK;wBACrB,UAAU;;;;;;;;;;;;0BAId,8OAAC;;kCACC,8OAAC;wBAAM,SAAQ;wBAAc,WAAU;kCAA2B;;;;;;kCAGlE,8OAAC;wBACC,MAAK;wBACL,OAAO,SAAS,WAAW;wBAC3B,WAAU;wBAEV,UAAU;;0CAEV,8OAAC;gCAAO,OAAM;0CAAG;;;;;;4BAChB,aAAa,GAAG,CAAC,CAAC,qBACjB,8OAAC;oCAAqB,OAAO,KAAK,EAAE;8CACjC,KAAK,KAAK;mCADA,KAAK,EAAE;;;;;;;;;;;;;;;;;0BAM1B,8OAAC;;kCACC,8OAAC;wBAAM,SAAQ;wBAAW,WAAU;kCAA2B;;;;;;kCAG/D,8OAAC;wBACC,MAAK;wBACL,MAAK;wBACL,IAAG;wBACH,WAAU;wBACV,OAAO,SAAS,QAAQ;wBACxB,UAAU;;;;;;;;;;;;0BAGd,8OAAC;;kCACC,8OAAC;wBAAM,SAAQ;wBAAkB,WAAU;kCAA2B;;;;;;kCAGtE,8OAAC;wBACC,MAAK;wBACL,MAAK;wBACL,IAAG;wBACH,WAAU;wBACV,OAAO,SAAS,eAAe;wBAC/B,UAAU;;;;;;;;;;;;0BAGd,8OAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;0BAGD,8OAAC;gBAAE,WAAU;;oBAAiC;oBACnB;kCACzB,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;kCACT,cAAA,8OAAC;4BAAK,WAAU;sCAA+B;;;;;;;;;;;;;;;;;0BAGnD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;;;;;;kCACd,8OAAC;wBAAK,WAAU;kCAAwB;;;;;;kCACxC,8OAAC;wBAAG,WAAU;;;;;;;;;;;;0BAEhB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,MAAK;oBACL,WAAU;;sCAEV,8OAAC;4BACC,KAAI;4BACJ,KAAI;4BACJ,WAAU;;;;;;wBACV;;;;;;;;;;;;;;;;;;AAMZ"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}